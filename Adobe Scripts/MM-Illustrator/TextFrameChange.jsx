//	TextFrameChange.js//	http://www.pictrix.jp/	Umezawa//	11.07.06if ( documents.length > 0 && activeDocument.textFrames.length > 0 ){	selObj = activeDocument.selection;	selCnt = selObj.length;	for ( i = selCnt - 1; i >= 0; i-- ){		if ( selObj[ i ].typename = "TextFrame" ){			if ( selObj[ i ].kind == TextType.AREATEXT ) type = 0;			else if ( selObj[ i ].kind == TextType.POINTTEXT ) type = 1;			else type = 2;			engine( selObj[ i ], type );			selObj[ i ].remove( );		}	}}function engine( obj, type ){	switch ( type ){		case 0 :		case 2 :			var newTx= obj.layer.textFrames.add( );			newTx.orientation = obj.orientation;			obj.textRange.move( newTx, ElementPlacement.INSIDE );			if ( obj.orientation == TextOrientation.HORIZONTAL ){				newTx.top = obj.top;				newTx.left = obj.left;			}else{				newTx.top = obj.top;				newTx.left = obj.left + obj.width - newTx.width;			}			break;		case 1 :			var w = obj.width * 0.1;			var h = obj.height * 0.1;			if ( obj.orientation == TextOrientation.HORIZONTAL ){				var rectRef = obj.layer.pathItems.rectangle( obj.top, obj.left, obj.width * 1.1, obj.height * 1.1 );			}else{				var rectRef = obj.layer.pathItems.rectangle( obj.top, obj.left - w, obj.width * 1.1, obj.height * 1.1 );			}			var newTx= obj.layer.textFrames.areaText( rectRef );			newTx.orientation = obj.orientation;			obj.textRange.move( newTx, ElementPlacement.INSIDE );			break;	}}