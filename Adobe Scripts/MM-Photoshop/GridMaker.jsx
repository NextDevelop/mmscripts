//alert(checkSelection())if( app.documents.length > 0 ){    if(!checkSelection()){        activeDocument.selection.selectAll();    }    app.activeDocument.suspendHistory('Create guide grids','mainDialog()');}function checkSelection(){	var flg = true;		try{		activeDocument.selection.bounds;	}catch(e){		flg = false;	}		return flg;}function mainDialog() {	var dlg = new Window('dialog', 'GridMaker', [100,100,365,500]);		var calculateAmount = function(pnl){		var t = pnl.max.text*1;		var m = pnl.margin.text*1;		var n = pnl.num.text*1;		if(n>0){			var w = (t-(n-1)*m)/n;			pnl.amount.text = w;		}			}		var calculateMargin = function(pnl){		var t = pnl.max.text*1;		var n = pnl.num.text*1;		var w = pnl.amount.text*1;		if(n-1>0){			var m = (t-n*w)/(n-1);			pnl.margin.text = m;		}	}		var sBounds = activeDocument.selection.bounds;    //vertical	dlg.vPanel 				= dlg.add('panel', [5,5,130,290], 'Rows');	dlg.vPanel.amountLabel 	= dlg.vPanel.add('statictext', 		[5,51,115,73], 		'Width:');	dlg.vPanel.amount 		= dlg.vPanel.add('edittext', 		[5,74,115,96], 		sBounds[2]-sBounds[0]);	dlg.vPanel.marginLabel 	= dlg.vPanel.add('statictext', 		[5,97,115,119], 	'Gutter:');	dlg.vPanel.margin 		= dlg.vPanel.add('edittext', 		[5,120,115,142], 	0);	dlg.vPanel.numLabel 	= dlg.vPanel.add('statictext', 		[5,143,115,165], 	'Number:');	dlg.vPanel.num 			= dlg.vPanel.add('edittext', 		[5,166,115,188], 	1);	dlg.vPanel.maxLabel 	= dlg.vPanel.add('statictext', 		[5,189,115,211], 	'Total Width:');	dlg.vPanel.max 			= dlg.vPanel.add('edittext', 		[5,212,115,234], 	sBounds[2]-sBounds[0]);	dlg.vPanel.checkBox 	= dlg.vPanel.add('checkbox', 		[5,240,115,260], 	'Guides');	dlg.vPanel.checkBox.value=true;	dlg.vPanel.amount.onChanging 	= function(){calculateMargin(dlg.vPanel)};	dlg.vPanel.margin.onChanging 	= function(){calculateAmount(dlg.vPanel)};	dlg.vPanel.num.onChanging 		= function(){calculateAmount(dlg.vPanel)};	dlg.vPanel.max.onChanging 		= function(){calculateAmount(dlg.vPanel)};	//horizontal	dlg.hPanel 				= dlg.add('panel', [135,5,265,290], 'Columns');	dlg.hPanel.amountLabel 	= dlg.hPanel.add('statictext', 		[5,51,115,73], 		'Height:');	dlg.hPanel.amount 		= dlg.hPanel.add('edittext', 		[5,74,115,96], 		sBounds[3]-sBounds[1]);	dlg.hPanel.marginLabel 	= dlg.hPanel.add('statictext', 		[5,97,115,119], 	'Gutter:');	dlg.hPanel.margin 		= dlg.hPanel.add('edittext', 		[5,120,115,142], 	0);	dlg.hPanel.numLabel 	= dlg.hPanel.add('statictext', 		[5,143,115,165], 	'Number:');	dlg.hPanel.num 			= dlg.hPanel.add('edittext', 		[5,166,115,188], 	1);	dlg.hPanel.maxLabel 	= dlg.hPanel.add('statictext', 		[5,189,115,211], 	'Total Height:');	dlg.hPanel.max 			= dlg.hPanel.add('edittext', 		[5,212,115,234], 	sBounds[3]-sBounds[1]);	dlg.hPanel.checkBox 	= dlg.hPanel.add('checkbox', 		[5,240,115,260], 	'Guides');	dlg.hPanel.checkBox.value=true;        	dlg.hPanel.amount.onChanging 	= function(){calculateMargin(dlg.hPanel)};	dlg.hPanel.margin.onChanging 	= function(){calculateAmount(dlg.hPanel)};	dlg.hPanel.num.onChanging 		= function(){calculateAmount(dlg.hPanel)};	dlg.hPanel.max.onChanging 		= function(){calculateAmount(dlg.hPanel)};    dlg.useShape = dlg.add("checkbox", [5,300,120,320], "Use Shape");		dlg.okButton = dlg.add('button', [50,340,150,380], 'OK');	dlg.cancelButton = dlg.add('button', [160,340,260,380], 'Cancel');			calculateAmount(dlg.vPanel);	calculateAmount(dlg.hPanel);		dlg.okButton.onClick = function okClick()	{				var doc = activeDocument;		var lastV;         var lastH;		        //guide        if( !dlg.useShape.value){            if (dlg.vPanel.checkBox.value){                var n = dlg.vPanel.num.text*1;                var a = dlg.vPanel.amount.text*1;                var m = dlg.vPanel.margin.text*1;                var max = dlg.vPanel.max.text*1;                var o = doc.selection.bounds[0];                for(var i=0; i<n;i++){                    if(lastV!=i*(a+m)+o){                        makeGuide(i*(a+m)+o,"Vrtc");                    }                    makeGuide(i*(a+m)+o+a,"Vrtc");                                        lastV = i*(a+m)+o+a;                }            }                        if (dlg.hPanel.checkBox.value){                var n = dlg.hPanel.num.text*1;                var a = dlg.hPanel.amount.text*1;                var m = dlg.hPanel.margin.text*1;                var max = dlg.hPanel.max.text*1;                var o = doc.selection.bounds[1];                for(var i=0; i<n;i++){                    if(lastH!=i*(a+m)+o){                        makeGuide(i*(a+m)+o,"Hrzn");                    }                    makeGuide(i*(a+m)+o+a,"Hrzn");                    lastH = i*(a+m)+o+a;                }            }                }else if(dlg.useShape.value){            var vn = dlg.vPanel.num.text*1;            var va = dlg.vPanel.amount.text*1;            var vm = dlg.vPanel.margin.text*1;                        var hn = dlg.hPanel.num.text*1;            var ha = dlg.hPanel.amount.text*1;            var hm = dlg.hPanel.margin.text*1;            var ox = doc.selection.bounds[0];            var oy = doc.selection.bounds[1];            var ow = doc.selection.bounds[2];            var oh = doc.selection.bounds[3];                            for(var i=0; i<vn;i++){                    var x = i*(va+vm)+ox;                    for( var j=0; j<hn; j++){                        var y = j*(ha+hm)+oy;                        drawShape(x, y, x+va, y+ha, app.foregroundColor.rgb, "shape" + i+1 + "_" + j+1);                    }                }                                }		dlg.close();	};		dlg.cancelButton.onClick = function cancelClick() {		dlg.close();	}		dlg.show();}function makeGuide(pixelOffSet, orientation) {		var id33 = charIDToTypeID( "Mk  " );	    var desc7 = new ActionDescriptor();	    var id34 = charIDToTypeID( "Nw  " );	        var desc8 = new ActionDescriptor();	        var id35 = charIDToTypeID( "Pstn" );	        var id36 = charIDToTypeID( "#Pxl" );	        desc8.putUnitDouble( id35, id36, pixelOffSet );	        var id37 = charIDToTypeID( "Ornt" );	        var id38 = charIDToTypeID( "Ornt" );	        var id39 = charIDToTypeID( orientation );	        desc8.putEnumerated( id37, id38, id39 );	    var id40 = charIDToTypeID( "Gd  " );	    desc7.putObject( id34, id40, desc8 );	executeAction( id33, desc7, DialogModes.NO );}    // draw shape    function drawShape(sx, sy, ex, ey, color, name) {        //var rgb = toRGB(color);        var rgb = { r: color.red, g: color.green, b: color.blue };        var id1 = charIDToTypeID('Mk  ');        var desc1 = new ActionDescriptor();        var id2 = charIDToTypeID('null');        var ref1 = new ActionReference();        var id3 = stringIDToTypeID('contentLayer');        ref1.putClass(id3);        desc1.putReference(id2, ref1);        var id4 = charIDToTypeID('Usng');        var desc2 = new ActionDescriptor();        var id5 = charIDToTypeID('Type');        var id6 = stringIDToTypeID('solidColorLayer');        desc2.putClass(id5, id6);        var id7 = charIDToTypeID('Shp ');        var desc3 = new ActionDescriptor();        var id8 = charIDToTypeID('Top ');        var id9 = charIDToTypeID('#Pxl');        desc3.putUnitDouble(id8, id9, sy);        var id10 = charIDToTypeID('Left');        var id11 = charIDToTypeID('#Pxl');        desc3.putUnitDouble(id10, id11, sx);        var id12 = charIDToTypeID('Btom');        var id13 = charIDToTypeID('#Pxl');        desc3.putUnitDouble(id12, id13, ey);        var id14 = charIDToTypeID('Rght');        var id15 = charIDToTypeID('#Pxl');        desc3.putUnitDouble(id14, id15, ex);        var id16 = charIDToTypeID('Rctn');        desc2.putObject(id7, id16, desc3);        var id17 = stringIDToTypeID('contentLayer');        desc1.putObject(id4, id17, desc2);        executeAction(id1, desc1, DialogModes.NO);        var id18 = charIDToTypeID('setd');        var desc4 = new ActionDescriptor();        var id19 = charIDToTypeID('null');        var ref2 = new ActionReference();        var id20 = stringIDToTypeID('contentLayer');        var id21 = charIDToTypeID('Ordn');        var id22 = charIDToTypeID('Trgt');        ref2.putEnumerated(id20, id21, id22);        desc4.putReference(id19, ref2);        var id23 = charIDToTypeID('T   ');        var desc5 = new ActionDescriptor();        var id24 = charIDToTypeID('Clr ');        var desc6 = new ActionDescriptor();        var id25 = charIDToTypeID('Rd  ');        desc6.putDouble(id25, rgb.r);        var id26 = charIDToTypeID('Grn ');        desc6.putDouble(id26, rgb.g);        var id27 = charIDToTypeID('Bl  ');        desc6.putDouble(id27, rgb.b);        var id28 = charIDToTypeID('RGBC');        desc5.putObject(id24, id28, desc6);        var id29 = stringIDToTypeID('solidColorLayer');        desc4.putObject(id23, id29, desc5);        executeAction(id18, desc4, DialogModes.NO);        var id30 = charIDToTypeID('setd');        var desc7 = new ActionDescriptor();        var id31 = charIDToTypeID('null');        var ref3 = new ActionReference();        var id32 = charIDToTypeID('Lyr ');        var id33 = charIDToTypeID('Ordn');        var id34 = charIDToTypeID('Trgt');        ref3.putEnumerated(id32, id33, id34);        desc7.putReference(id31, ref3);        var id35 = charIDToTypeID('T   ');        var desc8 = new ActionDescriptor();        var id36 = charIDToTypeID('Nm  ');        desc8.putString(id36, name);        var id37 = charIDToTypeID('Lyr ');        desc7.putObject(id35, id37, desc8);        executeAction(id30, desc7, DialogModes.NO);    }    function toRGB(code) {        var dec = parseInt('0x' + code);        var r = (dec & 0xff0000) >>> 0x000010;        var g = (dec & 0x00ff00) >>> 0x000008;        var b = (dec & 0x0000ff);        return { r: r, g: g, b: b };    }